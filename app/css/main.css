/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*
    Example usage: 
    @include animation(10s, 5s, changecolour)
 */

.clearfix:after,
.widget:after,
.search-form:after,
.post-password-form p:after,
.post-password-form:after,
#search_block:after,
.search-form p:after,
#search_block p:after,
.navigation-single:after,
.commentlist .comment-author:after {
  content: '';
  display: block;
  clear: both;
}

.ellipsis {
  white-space: nowrap;
  /* 1 */
  text-overflow: ellipsis;
  /* 2 */
  overflow: hidden;
}

.container {
  width: 1200px;
  max-width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-left: 30px;
  padding-right: 30px;
}

.container:before,
.container:after {
  content: " ";
  display: table;
}

.container:after {
  clear: both;
}

.container-flex {
  width: 1200px;
  max-width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-left: 30px;
  padding-right: 30px;
  display: -ms-flexbox;
  display: flex;
}

.btn,
button,
input[type='button'],
input[type='reset'],
input[type='file'],
input[type='submit'] {
  color: #fff;
  background-color: #333;
  text-transform: uppercase;
  padding: 20px 40px;
  text-decoration: none;
  display: inline-block;
  transition: all .3s ease;
}

.btn:hover,
button:hover,
input[type='button']:hover,
input[type='reset']:hover,
input[type='file']:hover,
input[type='submit']:hover {
  background-color: #1a1a1a;
  text-decoration: none;
}

.bg-stretch {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: -1;
  background-size: cover;
  background-position: 50% 50%;
  background-repeat: no-repeat;
}

.img-stretch {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: -1;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.img-stretch img {
  width: 100%;
  height: auto;
  max-width: none;
}

.text-center {
  text-align: center;
}

.flex-layout {
  display: -ms-flexbox;
  display: flex;
}

.flex-column {
  -ms-flex-direction: column;
  flex-direction: column;
}

.flex-wrap {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.flex-center {
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-row-v-center {
  -ms-flex-align: center;
  align-items: center;
}

.flex-row-space-between {
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flex-col-end {
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.flex {
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

* {
  max-height: 1000000px;
}

body {
  color: #333;
  background: #fff;
  font: 16px/1.2 "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  min-width: 320px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

img {
  max-width: 100%;
  height: auto;
}

.gm-style img {
  max-width: none;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
.h {
  font-family: inherit;
  font-weight: bold;
  margin: 0 0 0.5em;
  color: inherit;
}

h1,
.h1 {
  font-size: 30px;
}

h2,
.h2 {
  font-size: 27px;
}

h3,
.h3 {
  font-size: 24px;
}

h4,
.h4 {
  font-size: 21px;
}

h5,
.h5 {
  font-size: 17px;
}

h6,
.h6 {
  font-size: 15px;
}

p {
  margin: 0 0 1em;
}

a {
  color: #39f;
}

a:hover,
a:focus {
  text-decoration: none;
}

form,
fieldset {
  margin: 0;
  padding: 0;
  border-style: none;
}

input[type='text'],
input[type='tel'],
input[type='email'],
input[type='search'],
input[type='password'],
input[type='url'],
input[type='date'],
textarea {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  box-sizing: border-box;
  border: none;
  border: 1px solid #999;
}

input[type='text']::-webkit-input-placeholder,
input[type='tel']::-webkit-input-placeholder,
input[type='email']::-webkit-input-placeholder,
input[type='search']::-webkit-input-placeholder,
input[type='password']::-webkit-input-placeholder,
input[type='url']::-webkit-input-placeholder,
input[type='date']::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #999;
}

input[type='text']::-moz-placeholder,
input[type='tel']::-moz-placeholder,
input[type='email']::-moz-placeholder,
input[type='search']::-moz-placeholder,
input[type='password']::-moz-placeholder,
input[type='url']::-moz-placeholder,
input[type='date']::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1;
  color: #999;
}

input[type='text']:-moz-placeholder,
input[type='tel']:-moz-placeholder,
input[type='email']:-moz-placeholder,
input[type='search']:-moz-placeholder,
input[type='password']:-moz-placeholder,
input[type='url']:-moz-placeholder,
input[type='date']:-moz-placeholder,
textarea:-moz-placeholder {
  color: #999;
}

input[type='text']:-ms-input-placeholder,
input[type='tel']:-ms-input-placeholder,
input[type='email']:-ms-input-placeholder,
input[type='search']:-ms-input-placeholder,
input[type='password']:-ms-input-placeholder,
input[type='url']:-ms-input-placeholder,
input[type='date']:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #999;
}

input[type='text'].placeholder,
input[type='tel'].placeholder,
input[type='email'].placeholder,
input[type='search'].placeholder,
input[type='password'].placeholder,
input[type='url'].placeholder,
input[type='date'].placeholder,
textarea.placeholder {
  color: #999;
}

input[type='text'],
input[type='tel'],
input[type='email'],
input[type='search'],
input[type='password'],
input[type='url'],
input[type='date'] {
  height: 30px;
  line-height: 30px;
  padding: 0 30px;
  width: 360px;
  max-width: 100%;
}

select {
  -webkit-border-radius: 0;
}

textarea {
  resize: vertical;
  vertical-align: top;
  height: 150px;
  width: 500px;
  max-width: 100%;
  padding: 10px 15px;
}

button,
input[type='button'],
input[type='reset'],
input[type='file'],
input[type='submit'] {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  cursor: pointer;
  height: 30px;
  line-height: 30px;
  padding: 0 30px;
}

.widget {
  margin-bottom: 1.2em;
}

.widget ul {
  padding-left: 2em;
}

.widget select {
  min-width: inherit;
  width: 100%;
}

/* Calendar */

#wp-calendar {
  width: 95%;
  margin-bottom: 15px;
  clear: both;
  padding: 0;
}

#wp-calendar caption {
  padding: 10px;
}

#wp-calendar th,
#wp-calendar td {
  text-align: center;
  padding: 3px 0;
}

#wp-calendar td {
  background: transparent;
}

.comment-form label {
  display: block;
  padding-bottom: 4px;
}

.comment-form textarea {
  overflow: auto;
  margin: 0;
  height: 120px;
  min-height: 120px;
}

.comment-form textarea,
.comment-form input[type='text'] {
  margin: 0 4px 0 0;
  width: 300px;
}

.comment-form input[type='submit'] {
  display: block;
  float: none;
}

.post-password-form label {
  display: block;
}

.post-password-form input[type='password'] {
  margin: 0 4px 0 0;
  width: 300px;
}

.search-form input {
  float: left;
}

.search-form input[type='search'] {
  margin: 0 4px 0 0;
  width: 150px;
}

.post-password-form input {
  float: left;
}

.post-password-form input[type='password'] {
  width: 150px;
}

.comment-form button,
.comment-form input[type='submit'],
.post-password-form button,
.post-password-form input[type='submit'],
.search-form button,
.search-form input[type='submit'],
#search_block button,
#search_block input[type='submit'] {
  background: #333;
  color: #fff;
  height: 40px;
  padding: 0 10px;
}

.comment-form button:hover,
.comment-form input[type='submit']:hover,
.post-password-form button:hover,
.post-password-form input[type='submit']:hover,
.search-form button:hover,
.search-form input[type='submit']:hover,
#search_block button:hover,
#search_block input[type='submit']:hover {
  opacity: .8;
}

.search-form,
.post-password-form,
#search_block {
  margin-bottom: 15px;
}

.search-form input,
.post-password-form input,
#search_block input {
  float: left;
  height: 40px;
}

.search-form input[type='search'],
.search-form input[type='text'],
.post-password-form input[type='search'],
.post-password-form input[type='text'],
#search_block input[type='search'],
#search_block input[type='text'] {
  margin: 0 4px 0 0;
  width: 150px;
}

.search-form input[type='password'],
.post-password-form input[type='password'],
#search_block input[type='password'] {
  width: 150px;
}

.search-form input[type="submit"],
.search-form button,
.post-password-form input[type="submit"],
.post-password-form button,
#search_block input[type="submit"],
#search_block button {
  height: 40px;
}

.commentlist {
  margin: 0 0 1.2em;
}

.commentlist .edit-link {
  margin: 0;
}

.commentlist .avatar-holder {
  float: left;
  margin: 0 1.2em 4px 0;
}

.commentlist-item .commentlist-item {
  padding: 0;
}

.comment,
.commentlist-holder {
  overflow: hidden;
}

.commentlist-item .commentlist-item,
.commentlist-item + .commentlist-item {
  padding-top: 1.2em;
}

.widget_calendar #prev {
  padding-left: 5px;
  text-align: left;
}

.widget_calendar #next {
  padding-right: 5px;
  text-align: right;
}

.gallery-item dt {
  float: none;
  padding: 0;
}

.navigation,
.navigation-comments,
.pagination {
  position: relative;
  vertical-align: middle;
  margin-bottom: 1.2em;
  width: 100%;
  overflow: hidden;
}

.navigation .screen-reader-text,
.navigation-comments .screen-reader-text,
.pagination .screen-reader-text {
  position: absolute;
  left: -99999px;
}

.navigation .current,
.navigation-comments .current,
.pagination .current {
  color: #ccc;
}

.navigation .page-numbers,
.navigation-comments .page-numbers,
.pagination .page-numbers {
  display: inline-block;
  vertical-align: middle;
  padding: 0 5px;
}

.navigation .next,
.navigation .prev,
.navigation .al,
.navigation .ar,
.navigation-comments .next,
.navigation-comments .prev,
.navigation-comments .al,
.navigation-comments .ar,
.pagination .next,
.pagination .prev,
.pagination .al,
.pagination .ar {
  display: inline-block;
  vertical-align: middle;
  max-width: 50%;
  background: #333;
  color: #fff;
  padding: 5px;
  text-decoration: none;
}

.navigation .next.disabled,
.navigation .prev.disabled,
.navigation .al.disabled,
.navigation .ar.disabled,
.navigation-comments .next.disabled,
.navigation-comments .prev.disabled,
.navigation-comments .al.disabled,
.navigation-comments .ar.disabled,
.pagination .next.disabled,
.pagination .prev.disabled,
.pagination .al.disabled,
.pagination .ar.disabled {
  background: #b3b3b3;
  border-color: #b3b3b3;
  pointer-events: none;
}

.navigation .next a,
.navigation .prev a,
.navigation .al a,
.navigation .ar a,
.navigation-comments .next a,
.navigation-comments .prev a,
.navigation-comments .al a,
.navigation-comments .ar a,
.pagination .next a,
.pagination .prev a,
.pagination .al a,
.pagination .ar a {
  color: #fff;
}

.navigation-single {
  margin-bottom: 1.2em;
}

.navigation-single .next,
.navigation-single .prev {
  float: left;
  vertical-align: middle;
  max-width: 50%;
  background: #333;
  color: #fff;
  text-decoration: none;
}

.navigation-single .next a,
.navigation-single .prev a {
  color: inherit;
  text-decoration: none;
  padding: 5px;
  display: block;
}

.navigation-single .next {
  float: right;
}

img.border {
  padding: 5px;
  border: 1px solid #ccc;
}

.wp-caption {
  max-width: 100%;
  clear: both;
  border: 1px solid #999;
  padding: 5px;
  margin-bottom: 1.2em;
}

.wp-caption img {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: top;
  width: auto;
}

.wp-caption p {
  margin: .4em 0 0;
}

div.aligncenter,
figure.aligncenter {
  margin: 0 auto 1.2em;
  text-align: center;
}

img.aligncenter {
  display: block;
  margin: 0 auto;
}

.alignleft {
  float: left;
  margin: 0 1.2em 10px 0;
}

.alignright {
  float: right;
  margin: 0 0 10px 1.2em;
}

.alignnone {
  margin: 0;
}

img.wp-smiley {
  padding: 0;
  border: none;
}

.fluid-iframe {
  display: block;
  position: relative;
  padding-bottom: 56%;
}

.fluid-iframe iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;
}

.mejs-container {
  margin-bottom: 1.2em;
}

.wp-caption .wp-caption-text,
.entry .wp-caption .wp-caption-text {
  font-size: 11px;
  line-height: 17px;
  margin: 0;
  padding: 5px 4px 0;
}

.wp-caption-text,
.gallery,
.alignnone,
.gallery-caption,
.sticky,
.bypostauthor {
  height: auto;
}

.al,
.navigation .next {
  float: left;
}

.ar,
.navigation .prev {
  float: right;
}

.posts-list .entry p {
  margin: 0;
}

.posts-list .post {
  margin: 0 0 40px;
}

.post .title {
  margin-bottom: 10px;
}

.post .postmetadata {
  margin-bottom: 10px;
}

.textwidget p {
  padding: 0 0 10px 0;
}

.center {
  text-align: center;
}

.hidden {
  display: none;
}

code br {
  display: none;
}

.entry pre,
.entry code {
  font-family: mono-space, monospace;
  border: 1px solid #eee;
  padding: 20px;
  display: block;
  margin: 0 0 20px 0;
  overflow: auto;
  white-space: pre;
  font-size: 12px;
  line-height: 20px;
}

.entry code {
  padding: 1px 20px 0 20px;
  background: #f6f6f6;
  border-top: 0;
  border-bottom: 0;
}

.last {
  margin-right: 0 !important;
  clear: right;
}

.clear {
  clear: both;
  line-height: 0;
}

.page-link {
  padding: 0 0 15px;
}

/* Respond */

.comments {
  clear: both;
}

#respond {
  margin: 20px 0 20px 0;
  overflow: hidden;
}

.commentlist #respond {
  margin: 0 0 20px 0;
}

#respond .comment-reply-title small {
  font-size: 12px;
  font-weight: normal;
}

#commentform p {
  width: 100%;
  overflow: hidden;
  padding: 0 0 10px;
  margin: 0;
}

#commentform p label {
  display: block;
  padding: 0 0 5px;
}

#commentform p textarea {
  width: 96%;
}

/* Comments*/

#comments,
#reply-title {
  margin: 0 0 15px 0;
  line-height: 1.6em;
}

.commentlist {
  margin-left: -2em;
  padding: 0;
  text-align: justify;
  line-height: 1.6em;
}

.commentlist .comment {
  padding: 0 0 0 2em;
}

.commentlist .comment,
.commentlist + .comment {
  padding-top: 1.2em;
}

.commentlist .commentlist {
  padding: 0;
}

.commentlist .comment-author {
  margin-bottom: 0.5em;
}

.commentlist .comment-metadata {
  margin-bottom: 0.5em;
}

.commentlist .comment-author img {
  float: left;
  margin: 0 1.2em 4px 0;
}

.comment .comment-respond {
  margin-left: 20px;
}

.comment-body {
  margin: 0 0 20px;
}

.parent.comment .comment {
  margin-left: 30px;
}

.comment-author.vcard {
  margin-bottom: 10px;
}

.breadcrumb {
  padding-bottom: 20px;
}

.post .title h3 {
  margin-bottom: 1em;
}

/*
Theme Name: PROJECT NAME
Author: AUTHOR
Description: Designed by AUTHOR.
Version: 1.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Tags: white, light
Text Domain: am
*/

html {
  height: 100%;
}

body {
  height: 100%;
}

.wrapper {
  display: -ms-flexbox;
  display: flex;
  min-height: 100%;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: hidden;
}

.main {
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

@media (min-width: 768px) {
  .commentlist-item .commentlist-item {
    padding: 0 0 0 2em;
  }
}

@media (max-width: 1023px) {
  img.alignleft,
  img.alignright {
    max-width: 50%;
  }
}

@media (max-width: 767px) {
  .navigation,
  .navigation-comments,
  .pagination {
    padding: 0 5px;
    font-size: 12px;
  }

  .navigation .page-numbers,
  .navigation-comments .page-numbers,
  .pagination .page-numbers {
    padding: 0;
  }

  .navigation .next,
  .navigation .prev,
  .navigation .al,
  .navigation .ar,
  .navigation-comments .next,
  .navigation-comments .prev,
  .navigation-comments .al,
  .navigation-comments .ar,
  .pagination .next,
  .pagination .prev,
  .pagination .al,
  .pagination .ar {
    padding: .2em;
  }

  .navigation-single .next a,
  .navigation-single .prev a {
    padding: .2em;
  }

  .commentlist {
    margin-left: 0;
  }

  .commentlist .comment {
    padding: 0;
  }
}

@media (max-width: 479px) {
  .container {
    padding-left: 15px;
    padding-right: 15px;
  }

  .container-flex {
    padding-left: 15px;
    padding-right: 15px;
  }

  input[type=file] {
    max-width: 100%;
  }

  .search-form input[type='search'] {
    width: 100%;
  }

  .post-password-form input[type='password'] {
    width: 100%;
  }

  .search-form input[type='search'],
  .search-form input[type='text'],
  .post-password-form input[type='search'],
  .post-password-form input[type='text'],
  #search_block input[type='search'],
  #search_block input[type='text'] {
    width: 100%;
  }

  .search-form input[type='password'],
  .post-password-form input[type='password'],
  #search_block input[type='password'] {
    width: 100%;
  }

  #commentform p textarea {
    width: 100%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
